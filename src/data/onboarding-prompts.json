{
  "version": "1.0.0",
  "description": "Desktop Commander onboarding prompts for first-time users",
  "prompts": [
    {
      "id": "onb_001",
      "title": "Organize my Downloads folder",
      "description": "Clean up and organize your messy Downloads folder into relevant subfolders automatically.",
      "prompt": "Let's organize your Downloads folder! \n\nFirst, let me check what we're working with. I'll look at your Downloads folder to see how many files are there and what types.\n\nShould I start by analyzing your Downloads folder?",
      "categories": ["onboarding"],
      "secondaryTag": "Quick Start",
      "votes": 0,
      "gaClicks": 0,
      "icon": "FolderOpen",
      "author": "DC team",
      "verified": true
    },
    {
      "id": "onb_002",
      "title": "Set up GitHub Actions CI/CD",
      "description": "Set up GitHub Actions for your project to automatically run tests on every push with proper CI/CD workflow.",
      "prompt": "I'll help you set up a complete GitHub Actions CI/CD pipeline for your project. Let's start:\n\n**First, I need to know:**\n- What's the folder path to your project?\n- What type of project is it? (Node.js, Python, React, etc.)\n- Do you already have tests set up?\n\n**My Complete Process:**\n\n**Phase 1: GitHub Setup**\n1. **Check GitHub CLI**: Install `gh` CLI tool if not present\n2. **GitHub Login**: Help you authenticate with GitHub\n3. **Repository Setup**: Create repo or connect to existing one\n\n**Phase 2: CI/CD Configuration**\n4. **Workflow Analysis**: Understand your project's build/test requirements\n5. **GitHub Actions Setup**: Create `.github/workflows/ci.yml` configuration\n6. **Testing Pipeline**: Configure automated testing on every push\n7. **Build Pipeline**: Set up build processes if needed\n8. **Deployment Pipeline**: Optional deployment to GitHub Pages or other platforms\n\n**Phase 3: Advanced Features**\n9. **Branch Protection**: Set up rules requiring CI to pass before merging\n10. **Status Badges**: Add CI status badges to your README\n11. **Notification Setup**: Configure notifications for failed builds\n12. **Multi-Environment**: Set up different workflows for staging/production\n\n**What You'll Get:**\n- Automated testing on every commit and PR\n- Build verification before code merges\n- Deployment automation (optional)\n- Professional development workflow\n- Status visibility for your project\n\n**Prerequisites I'll Handle:**\n- Installing GitHub CLI if needed\n- GitHub authentication setup\n- Repository creation/connection\n- Workflow file creation and configuration\n\nWhat's the path to your project folder?",
      "categories": ["onboarding"],
      "secondaryTag": "Build & Deploy",
      "votes": 0,
      "gaClicks": 0,
      "icon": "GitBranch",
      "author": "DC team",
      "verified": true
    },
    {
      "id": "onb_003",
      "title": "Create organized knowledge/documents folder",
      "description": "Set up a well-structured knowledge base or document organization system with templates and suggested categories.",
      "prompt": "I want to help you create a well-organized knowledge base and document system. Let me understand your needs first:\n\n**Option 1: Create New Knowledge Base**\n- What type of work or projects do you typically do?\n- What subjects or topics would you like to organize knowledge about?\n- Do you prefer a general-purpose system or something specialized?\n\n**Option 2: Organize Existing Documents**\n- Do you have an existing folder with documents that needs organization?\n- What's the path to the folder you'd like me to analyze?\n\n**My Process:**\n1. **Assessment**: Understand your needs and existing content\n2. **Structure Design**: Propose a folder hierarchy tailored to your work\n3. **Template Creation**: Create useful template files (notes, project plans, etc.)\n4. **Organization**: Set up the complete system with guidelines\n\nWhich option sounds better - creating a new knowledge base from scratch, or organizing existing documents? And what type of work/subjects do you focus on?",
      "categories": ["onboarding"],
      "secondaryTag": "Quick Start",
      "votes": 0,
      "gaClicks": 0,
      "icon": "BookOpen",
      "author": "DC team",
      "verified": true
    },
    {
      "id": "onb_004",
      "title": "Explain codebase or repository to me",
      "description": "Analyze and explain any codebase - local project or GitHub repository - including architecture, dependencies, and how it works.",
      "prompt": "I'll help you understand a codebase thoroughly. Let me know what you'd like to analyze:\n\n**Option 1: Local Project**\n- What's the folder path to your local project?\n\n**Option 2: GitHub Repository**\n- What's the GitHub repository URL you'd like me to analyze?\n- If you don't have git/gh installed, I'll help you set them up\n- If needed, I'll help you log in to GitHub\n\n**What I'll do:**\n1. **Setup**: Install git/gh CLI tools if needed and help with GitHub login\n2. **Code Retrieval**: Clone the repo or analyze your local folder\n3. **Initial Analysis**: Examine project structure, files, and technologies\n4. **Architecture Overview**: Explain the overall design and patterns\n5. **Key Components**: Break down main modules and features\n6. **Dependencies**: Document libraries and frameworks used\n7. **Setup Guide**: Provide step-by-step setup and running instructions\n8. **Code Flow**: Explain how the main functionality works\n9. **Summary Document**: Create comprehensive documentation\n\nPlease provide either:\n- Local folder path: `/path/to/your/project`\n- GitHub URL: `https://github.com/user/repo` or `git@github.com:user/repo.git`",
      "categories": ["onboarding"],
      "secondaryTag": "Code Analysis",
      "votes": 0,
      "gaClicks": 0,
      "icon": "Code",
      "author": "DC team",
      "verified": true
    },
    {
      "id": "onb_005",
      "title": "Clean up unused code in my project",
      "description": "Scan your codebase to find unused imports, dead functions, and redundant code that can be safely removed.",
      "prompt": "I'll help you clean up unused and dead code in your project. Let's start safely:\n\n**First, I need to know:**\n- What's the folder path to your project?\n- What programming language/framework is it? (JavaScript, Python, Java, etc.)\n\n**My systematic approach:**\n\n**Phase 1: Analysis**\n1. **Project Understanding**: Analyze structure and main technologies\n2. **Dependency Mapping**: Understand how files reference each other\n3. **Code Scanning**: Identify potential unused code:\n   - Unused imports and dependencies\n   - Dead/unreferenced functions and variables\n   - Unreachable code blocks\n   - Unused configuration files\n\n**Phase 2: Safety & Backup**\n4. **Impact Assessment**: Explain what each finding does and removal safety\n5. **Backup Strategy**: Recommend backup before making changes\n6. **Show Before Remove**: Present everything I plan to remove\n\n**Phase 3: Cleanup (Only with your approval)**\n7. **Selective Removal**: Remove only what you approve\n8. **Testing**: Suggest running tests after cleanup\n9. **Summary Report**: Document what was cleaned and space saved\n\n**Safety Promise**: I will NEVER remove code without your explicit approval for each change.\n\nWhat's the path to your project folder?",
      "categories": ["onboarding"],
      "secondaryTag": "Code Analysis",
      "votes": 0,
      "gaClicks": 0,
      "icon": "Trash2",
      "author": "DC team",
      "verified": true
    },
    {
      "id": "onb_006",
      "title": "Build shopping list app and deploy online",
      "description": "Create a simple shopping list web app from scratch and deploy it online - perfect for learning web development basics.",
      "prompt": "Let's build a simple shopping list web app and deploy it online! This is perfect for learning web development basics.\n\n**First, let me understand your experience:**\n- Have you built web apps before, or is this your first time?\n- Where would you like to create the project folder?\n\n**My Simple, Focused Approach:**\n\n**Phase 1: Project Setup & Planning**\n1. **Scope Discussion**: Confirm we're building a simple, functional app\n2. **Project Folder**: Create clean project structure\n3. **Technology Stack**: Use simple HTML, CSS, and vanilla JavaScript\n\n**Phase 2: Build Core Features**\n4. **Simple UI**: Clean input field and list display\n5. **Core Functions**: Add items, mark as done, delete items\n6. **Local Storage**: Save list between browser sessions\n7. **Test Locally**: Open in browser and verify it works\n\n**Phase 3: Deploy Online**\n8. **GitHub Setup**: Create repository (I'll help with GitHub login if needed)\n9. **Code Upload**: Push your app to GitHub\n10. **GitHub Pages**: Deploy with live URL\n11. **Share Your Creation**: Get a working link to show others\n\n**What You'll Build:**\n- ✅ Add shopping items with enter key\n- ✅ Check off items when bought\n- ✅ Delete items you don't need\n- ✅ Persistent storage (survives browser refresh)\n- ✅ Works on desktop and mobile\n- ✅ Clean, simple design\n\n**Time Estimate**: 20-30 minutes for a beginner\n\nReady to start? What folder should I use for your shopping list project?",
      "categories": ["onboarding"],
      "secondaryTag": "Build & Deploy",
      "votes": 0,
      "gaClicks": 0,
      "icon": "ShoppingCart",
      "author": "DC team",
      "verified": true
    },
    {
      "id": "onb_007",
      "title": "Analyze my data file",
      "description": "Upload or point to any data file (CSV, JSON, Excel, etc.) and get comprehensive analysis including patterns, insights, and summary reports.",
      "prompt": "I'll help you analyze your data file! \n\nWhat's the path to your data file? (e.g., `/Users/yourname/data.csv`)\n\nOnce you give me the path, I'll start by checking what type of file it is and show you a quick preview, then we can dive deeper step by step.",
      "categories": ["onboarding"],
      "secondaryTag": "Quick Start",
      "votes": 0,
      "gaClicks": 0,
      "icon": "BarChart3",
      "author": "DC team",
      "verified": true
    },
    {
      "id": "onb_008",
      "title": "Check system health and resources",
      "description": "Analyze your system's health, resource usage, running processes, and generate a comprehensive system status report.",
      "prompt": "Let me check your system health and resources!\n\nI'll start by looking at your CPU, memory, and disk usage, then check for any performance issues.\n\nShould I begin the system analysis?",
      "categories": ["onboarding"],
      "secondaryTag": "Quick Start",
      "votes": 0,
      "gaClicks": 0,
      "icon": "Activity",
      "author": "DC team",
      "verified": true
    },
    {
      "id": "onb_009",
      "title": "Find Patterns and Errors in Log Files",
      "description": "Analyze log files to identify errors, patterns, performance issues, and security concerns with detailed insights and recommendations.",
      "prompt": "I'll help you analyze log files to find patterns, errors, and insights. Let me know which approach you prefer:\n\n**Option 1: Analyze Specific Log File**\n- Do you have a specific log file you want me to analyze?\n- What's the full path to your log file?\n\n**Option 2: Find Log Files on Your System**\n- I can search your system for common log file locations\n- What type of application/service logs are you interested in? (web server, database, application, system logs, etc.)\n\n**What I'll analyze:**\n\n**Error Detection:**\n1. **Critical Errors**: Fatal errors, exceptions, crashes\n2. **Warning Patterns**: Recurring warnings that might indicate issues\n3. **Error Frequency**: How often specific errors occur\n4. **Error Trends**: Are errors increasing over time?\n\n**Performance Analysis:**\n5. **Response Times**: Slow queries, long-running operations\n6. **Resource Usage**: Memory, CPU, disk I/O patterns\n7. **Traffic Patterns**: Peak usage times, load distribution\n8. **Bottlenecks**: Identify performance constraints\n\n**Security & Anomalies:**\n9. **Failed Login Attempts**: Potential security threats\n10. **Unusual Access Patterns**: Suspicious activity\n11. **IP Analysis**: Frequent visitors, geographic patterns\n12. **Rate Limiting**: Abuse detection\n\n**Deliverables:**\n- **Error Summary Report**: Top errors with occurrence counts\n- **Timeline Analysis**: When issues happen most frequently\n- **Pattern Recognition**: Recurring themes and root causes\n- **Actionable Recommendations**: Specific steps to fix identified issues\n- **Monitoring Suggestions**: What to watch for in the future\n\nWhich option would you prefer? Please provide either:\n- **Specific file**: `/path/to/your/logfile.log`\n- **Search request**: \"Find web server logs\" or \"Look for application logs\"",
      "categories": ["onboarding"],
      "secondaryTag": "Code Analysis",
      "votes": 0,
      "gaClicks": 0,
      "icon": "Search",
      "author": "DC team",
      "verified": true
    }
  ]
}